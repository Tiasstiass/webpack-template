<script>
  // Wait for some function will be available
  theme.waitForLoad = (name) => {
    var wait;
    var timeout;
    var deferred = new Promise((resolve, reject) => {
      wait = setInterval(function () {
        if (name.includes(".")) {
          let parts = name.split(".");
          if (typeof window[parts[0]][parts[1]] === "undefined") {
            return;
          }
        } else {
          if (typeof window[name] === "undefined") {
            return;
          }
        }
        clearInterval(wait);
        clearTimeout(timeout);
        resolve();
      }, 100);
      timeout = setTimeout(function () {
        clearInterval(wait);
        reject();
      }, 15000);
    });
    return deferred;
  };

  // Function for init images lazy loading
  theme.initImages = (container) => {
    theme.waitForLoad("LazyLoad").then(() => {
      theme.lazyLoadInstance = new LazyLoad({
        container: container,
        elements_selector: "img, picture",
      });
      theme.lazyLoadInstance.update();
    });
  };
  document.addEventListener("DOMContentLoaded", () => {
    theme.initImages(document);
  });

  // Function for init videos lazy loading
  theme.initVideos = (container) => {
    theme.waitForLoad("LazyLoad").then(() => {
      theme.lazyLoadInstance = new LazyLoad({
        container: container,
        elements_selector: "video, iframe",
      });
      theme.lazyLoadInstance.update();
    });
  };
  document.addEventListener("DOMContentLoaded", () => {
    theme.initVideos(document);
  });
  
</script>
