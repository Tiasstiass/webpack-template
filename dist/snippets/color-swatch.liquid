{%- comment -%}
  Inputs:
    product - product object
    class - extra classes (optionnal)
{%- endcomment -%}

{%- for option in product.options_with_values -%}
  {%- liquid
    assign is_color = false
    assign swatch_file_extension = '.png'
    assign swatch_trigger = 'product.color_swatch_trigger' | t | downcase
    assign downcased_option = option.name | downcase
    if downcased_option contains swatch_trigger
      assign is_color = true
    elsif swatch_trigger == 'color' and downcased_option contains 'colour'
      assign is_color = true
    endif
  -%}
  
  {% if is_color %}
    <div class="flex items-center gap-4">

      {% for value in option.values %}
        {%- liquid
          assign color_file_name = value | handle | replace: "/", "-" | append: swatch_file_extension | prepend: 'color-'
          assign color_image = color_file_name | file_img_url: '50x' | prepend: 'https:' | split: '?' | first
          assign color_swatch_fallback = value | split: ' ' | last | handle
        -%}

        <div 
          style="background-color: {{ color_swatch_fallback }};{% if images[color_file_name] != blank %}  background-image: url({{ color_image }});{% endif %}"
          class="{{ class }} bg-cover rounded-lg">
        </div>
      {%- endfor -%}
    </div>

  {% endif %}
{% endfor %}
